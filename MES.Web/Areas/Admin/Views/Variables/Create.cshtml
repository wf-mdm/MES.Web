@model MES.Web.Areas.Admin.Models.ENG_VARIABLES
@{
    Layout = "~/Views/Shared/Admin.cshtml";
}
<div class="box box-primary data-form">
    <div class="box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.LINENAME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("LINENAME", null, "-- 请选择 --", htmlAttributes: new { @class = "form-control select2", style = "width: 100%" })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.LINENAME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PARTNO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("PARTNO", null, "-- 请选择 --", htmlAttributes: new { @class = "form-control select2", style = "width: 100%" })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.PARTNO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VARNAME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.VARNAME, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.VARNAME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VARTYPE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.VARTYPE, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.VARTYPE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.L_STNO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("L_STNO", null, "-- 请选择 --", htmlAttributes: new { @class = "form-control select2", style = "width: 100%" })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.L_STNO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VARDESC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.VARDESC, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.VARDESC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VARVALUE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.VARVALUE, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.VARVALUE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UPDATETIME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.UPDATETIME, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-5 error-msg">

                        @Html.ValidationMessageFor(model => model.UPDATETIME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="提交" class="btn btn-primary" />
                        @Html.ActionLink("取消", "Index", new { }, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<script type="text/javascript">
    $(function () {
        var m = /.*\/app\/[^\/]+\/[^\/]+/i.exec(window.location.pathname);
        if (!m) return;
        var url = m[0] + "/OPSTN";
        $("#L_STNO").each(function () {
            var $stn = $(this),
                $form = $stn.parents("form"),
                $line = $form.find("select[name=LINENAME]");
            $line.change(function () {
                $.get(url, { LINENAME: $line.val()}, function (datas) {
                    var tmp = window.DEFAULT_OPTION ? window.DEFAULT_OPTION : "<option value>-- 请选择 --</option>";
                    for (var i in datas.STN)
                        tmp += "<option value=\"" + datas.STN[i].L_STNO + "\">" + datas.STN[i].CodeName + "</option>";
                    $stn.html(tmp);
                }, "json");
            });
        });
    });
</script>